<h1>About</h1>
<p>wcm2022</p>
<p>四設計一甲 410231104 呂佳柔</p>
<p>下學期選課 網際內容管理</p>
<p>倉儲:<a href="https://github.com/CHIA-ROU/wcm2022">https://github.com/CHIA-ROU/wcm2022</a></p>
<p>網頁:<a href="https://chia-rou.github.io/wcm2022/content/index.html">https://chia-rou.github.io/wcm2022/content/index.html</a> </p>
<p></p><h1>Online</h1>
<h2>w13</h2>
<p>2022/5/20</p>
<p><span>在個人動態與靜態網頁中配置 Brython 程式環境, 並啟動執行線上程式</span></p>
<p><span>執行結果</span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<div id="brython_div"></div>
<script type="text/python">
# from https://levelup.gitconnected.com/writing-tetris-in-python-2a16bddb5318
# 暫時關閉 system proxy 設定後,  pip install pygame
#import pygame
import random
# 以下為 Brython 新增
from browser import document as doc
from browser import html
import browser.timer

# 利用 html 建立一個 CANVAS 標註物件, 與變數 canvas 對應
canvas = html.CANVAS(width = 400, height = 500, id="canvas")
brython_div = doc["brython_div"]
brython_div <= canvas
ctx = canvas.getContext("2d")

colors = [
    (0, 0, 0),
    (120, 37, 179),
    (100, 179, 179),
    (80, 34, 22),
    (80, 134, 22),
    (180, 34, 22),
    (180, 34, 122),
]


class Figure:
    x = 0
    y = 0

    figures = [
        [[1, 5, 9, 13], [4, 5, 6, 7]],
        [[4, 5, 9, 10], [2, 6, 5, 9]],
        [[6, 7, 9, 10], [1, 5, 6, 10]],
        [[1, 2, 5, 9], [0, 4, 5, 6], [1, 5, 9, 8], [4, 5, 6, 10]],
        [[1, 2, 6, 10], [5, 6, 7, 9], [2, 6, 10, 11], [3, 5, 6, 7]],
        [[1, 4, 5, 6], [1, 4, 5, 9], [4, 5, 6, 9], [1, 5, 6, 9]],
        [[1, 2, 5, 6]],
    ]

    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.type = random.randint(0, len(self.figures) - 1)
        self.color = random.randint(1, len(colors) - 1)
        self.rotation = 0

    def image(self):
        return self.figures[self.type][self.rotation]

    def rotate(self):
        self.rotation = (self.rotation + 1) % len(self.figures[self.type])


class Tetris:
    level = 2
    score = 0
    state = "start"
    field = []
    height = 0
    width = 0
    x = 100
    y = 60
    zoom = 20
    figure = None

    def __init__(self, height, width):
        self.height = height
        self.width = width
        self.field = []
        self.score = 0
        self.state = "start"
        for i in range(height):
            new_line = []
            for j in range(width):
                # 起始時每一個都填入 0
                new_line.append(0)
            self.field.append(new_line)

    def new_figure(self):
        self.figure = Figure(3, 0)

    def intersects(self):
        intersection = False
        for i in range(4):
            for j in range(4):
                if i * 4 + j in self.figure.image():
                    # block 到達底部, 左右兩邊界, 或該座標有其他 block
                    if i + self.figure.y > self.height - 1 or \
                            j + self.figure.x > self.width - 1 or \
                            j + self.figure.x < 0 or \
                            self.field[i + self.figure.y][j + self.figure.x] > 0:
                        intersection = True
        return intersection

    def break_lines(self):
        lines = 0
        for i in range(1, self.height):
            zeros = 0
            for j in range(self.width):
                if self.field[i][j] == 0:
                    zeros += 1
            if zeros == 0:
                lines += 1
                for i1 in range(i, 1, -1):
                    for j in range(self.width):
                        self.field[i1][j] = self.field[i1 - 1][j]
        self.score += lines ** 2

    def go_space(self):
        while not self.intersects():
            self.figure.y += 1
        self.figure.y -= 1
        self.freeze()

    def go_down(self):
        self.figure.y += 1
        if self.intersects():
            self.figure.y -= 1
            self.freeze()

    def freeze(self):
        for i in range(4):
            for j in range(4):
                if i * 4 + j in self.figure.image():
                    self.field[i + self.figure.y][j + self.figure.x] = self.figure.color
        self.break_lines()
        self.new_figure()
        if self.intersects():
            self.state = "gameover"

    def go_side(self, dx):
        old_x = self.figure.x
        self.figure.x += dx
        if self.intersects():
            self.figure.x = old_x

    def rotate(self):
        old_rotation = self.figure.rotation
        self.figure.rotate()
        if self.intersects():
            self.figure.rotation = old_rotation

# Define some colors
# from https://stackoverflow.com/questions/3380726/converting-a-rgb-color-tuple-to-a-six-digit-code
BLACK = '#%02x%02x%02x' % (0, 0, 0)
WHITE = '#%02x%02x%02x' % (255, 255, 255)
GRAY = '#%02x%02x%02x' % (128, 128, 128)

done = False
fps = 25
game = Tetris(20, 10)
counter = 0

pressing_down = False

def key_down(eve):
    key = eve.keyCode
    #if event.type == pygame.QUIT:
    # 32 is pause
    if key == 32:
        done = True
    # 82 is r key to rotate
    if key == 82:
        game.rotate()
    # 40 is down key
    if key == 40:
        pressing_down = True
    # 37 is left key
    if key == 37:
        game.go_side(-1)
    # 39 is right key
    if key == 39:
        game.go_side(1)
    # 68 is d key to move block to bottom
    if key == 68:
        game.go_space()
    # 27 is escape
    # reset the game
    if key == 27:
        game.__init__(20, 10)

def key_up(eve):
    key = eve.keyCode
    # 40 is down key
    if key == 40:
        pressing_down = False

#while not done:
def do_game():
    global counter
    if game.figure is None:
        game.new_figure()
    counter += 1
    if counter > 100000:
        counter = 0
    if counter % (fps // game.level // 2) == 0 or pressing_down:
        if game.state == "start":
            game.go_down()
    
    for i in range(game.height):
        for j in range(game.width):
            ctx.fillStyle = WHITE
            #ctx.scale(game.zoom, game.zoom)
            ctx.fillRect(game.x + game.zoom * j, game.y + game.zoom * i, game.zoom, game.zoom)
            if game.field[i][j] > 0:
                ctx.fillStyle = '#%02x%02x%02x' % colors[game.field[i][j]]
                ctx.fillRect(game.x + game.zoom * j + 1, game.y + game.zoom * i + 1, game.zoom - 2, game.zoom - 1)
            ctx.lineWidth = 1
            ctx.strokeStyle = GRAY
            ctx.beginPath()
            ctx.rect(game.x + game.zoom * j, game.y + game.zoom * i, game.zoom, game.zoom)
            ctx.stroke()
    if game.figure is not None:
        for i in range(4):
            for j in range(4):
                p = i * 4 + j
                if p in game.figure.image():
                    ctx.fillStyle = '#%02x%02x%02x' % colors[game.figure.color]
                    ctx.fillRect(game.x + game.zoom * (j + game.figure.x) + 1,
                                      game.y + game.zoom * (i + game.figure.y) + 1,
                                      game.zoom - 2, game.zoom - 2)

doc.addEventListener("keydown", key_down)
doc.addEventListener("keyup", key_up)
browser.timer.set_interval(do_game, fps)
</script>
<h2>w14</h2>
<p><span>利用 Brython 在個人的網站上, 將程式存入 Gist, 從</span><a href="https://mde.tw/wcm2022_guide/downloads/w14/1a_stud_old.txt" target="_blank">舊資料</a><span>中刪除沒有在</span><a href="https://mde.tw/wcm2022_guide/downloads/w14/1a_stud.txt" target="_blank">註冊名單</a><span>中的內容, 完成後, 將個人網站的 w14 連結進行繳交.</span></p>
<!-- 導入 brython 程式庫 -->
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- 啟動 Brython -->
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/CHIA-ROU/6107e83bf9124cd2a54bcbad7359e581/raw/bd7fcc19b3c12d95ae8cbaebaa4f3adca5bc0f64/w14"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace.editor.setValue(prog)
    Ace.editor.scrollToRow(0)
    Ace.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
# 呼叫函式執行
run()
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<!-- 存擋表單開始 --><form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form><!-- 存擋表單結束 -->
<p></p>
<!-- 執行與清除按鈕開始 -->
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<!-- 執行與清除按鈕結束 -->
<p></p>
<!-- 程式執行 ouput 區 -->
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 -->
<div id="brython_div"></div>
<!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>
<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>
<p></p>
<h2>w14-score</h2>
<p>Tetris 線上遊戲加入計分系統</p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<!-- for ggame -->
<p>
<script src="/static/jquery-3.3.1.min.js"></script>
<script src="/static/jquery-ui.1.12.1.min.js"></script>
<script src="/static/pixi-3.0.5.min.js"></script>
<script src="/static/buzz-1.2.1.js"></script>
<script src="/static/bs.js"></script>
<script src="/downloads/brython_modules.js"></script>
</p>
<!-- Cango 程式庫 -->
<p>
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/CangoAxes-6v01-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
</p>
<!-- for Konva 程式庫 -->
<p>
<script src="/static/konva.min.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p><!-- 印出版次與關鍵字程式 --></p>
<p>
<script type="text/python3">
from browser import document as doc
from browser import html
import ace
# 清除畫布
def clear_bd(ev):
    bd = doc["brython_div"]
    bd.clear()
# Brython 3.3.4 內建的 container 名稱為  'container' 且 turtle 輸出為 svg 必須使用 div 訂定 id
Ace = ace.Editor(editor_id="kw_editor", console_id="kw_console", container_id="kw__container", storage_id="kw_py_src" )
Tetrisurl= "https://gist.githubusercontent.com/CHIA-ROU/95f73c74afe38a8ee2ebb3fb70338690/raw/29cec603a3d647b773def730a07af46fd23e3856/w14-%25E8%25A8%2588%25E5%2588%2586"
Tetris = open(Tetrisurl).read()
Ace.editor.setValue(Tetris)
Ace.editor.scrollToRow(0)
Ace.editor.gotoLine(0)
# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run'].bind('click', Ace.run)
doc['kw_show_console'].bind('click', Ace.show_console)
doc['kw_clear_console'].bind('click', Ace.clear_console)
doc['clear_bd'].bind('click', clear_bd)
</script>
</p>
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src', 'kw_filename');" type="submit" value="Save"/></form>
<p><button id="kw_run">Run</button> <button id="kw_show_console">Output</button> <button id="kw_clear_console">清除輸出區</button><button id="clear_bd">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console"></textarea></div>
<div id="brython_div"></div>
<div class="col-md-0" height="1" id="graphics-column" width="1"></div><h1>Midterm Exam</h1>
<p>題目1.如何設定nginx，讓其中所伺服的檔案只允許系上電腦下載。</p>
<p>解答:</p>
<ol>
<li>學校電腦網頁輸入 wcm.cycu.org:88</li>
<li>下載 nginx-1.20.2.zip 並解壓縮</li>
<li>nginx資料夾中拉出 nginx.cof</li>
<li>輸入 
<div class="line number1 index0 alt2"><img alt="" height="193" src="/images/只允許系上ipv6.png" width="331"/><br/><code class="js plain"></code></div>
</li>
<li><code class="js plain">save</code></li>
<li><code class="js plain">管理員身分執行nginx</code></li>
<li><span face="monospace" style="font-family: monospace;">cmd輸入ipconfig</span></li>
<li><span face="monospace" style="font-family: monospace;">複製IPv6位址，在網頁中貼上網址，前後加上[]，最後:</span></li>
<li><span face="monospace" style="font-family: monospace;"><span face="monospace" style="font-family: monospace;">網站顯示 <strong>Welcome to nginx!</strong></span></span></li>
</ol>
<p>題目2.如何利用gpg4win查驗所下載的<span>nfginx檔案與官方網站所附的數位簽章吻合。</span></p>
<p><span>解答</span></p><h1>midterm</h1>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" height="630" muted="true" width="1008">
<source src="/downloads/w8_project 1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
</div>
</div>
<p>如何在網頁放上wink影片?</p>
<p>1. 下載轉檔程式ffmpeg.exe</p>
<p>2. 將影片存至downloads下</p>
<p>3. wink中按<span style="background-color: #ccffcc;">render</span>匯出轉檔</p>
<p>4. 到<a href="https://mde.tw/wcm2022_guide/content/PME.html">https://mde.tw/wcm2022_guide/content/PME.html</a> 下載w4_diff_note.txt</p>
<p>5. 於網頁程式碼中貼上/downloads/winkvideo</p>
<p>6. 程式碼中winkVideoData後的項目數字需相同</p>
<p>7. "/downloads/<span style="background-color: #ffff99;">w8_project 1.mp4</span>"改成正確檔案名稱</p>
<p>8. save</p>
<h1>cadlab server</h1>
<p>2022/5/13</p>
<p>1. 利用cadlab中沒有啟動還原保護的電腦磁區練習安裝server利用</p>
<p>2. 利用ping指令，測試是否可以經由NAT連線到系上網路連外的C:\Users\cadlab&gt;ping -t 140.130.17.254</p>
<p>3. 找到組別對應主機7-3(wcmg5)-<span style="color: #0000ff;">192.168.1.173</span></p>
<p><span style="color: #000000;">4. 網路連線&gt;乙太網路&gt;內容&gt;IPv4&gt;IP位址更改為 <span>192.168.1.173&gt;DNS伺服器位址 168.95.1.1</span></span></p>
<p><span style="color: #000000;"><span>5. 確定電腦可以連外後，到網址 wcm.cycu.org:88上下載設定網際內容管理伺服器所需要的程式檔案</span></span>可攜系統portable_python_wcm2022和nginx-1.20.2</p>
<p>6. 搜尋Nssm，進入網站Download下載nssm 2.24(64-bit)，為了將之後設定的伺服器能轉為電腦操作系統對應的服務</p>
<p>7. 三個下載的程式檔案分別解壓縮至 C槽&gt;使用者&gt;cadlab&gt;wcm2022ag5(組別對應目錄)</p>
<p>8. 打開cmd，以系統管理員身分執行nssm將nginx內建轉為操作系統中的service</p>
<p>9. C:\Users\cadlab\wcm2022ag5&gt;nssm install nginx</p>
<p>10. 執行後跳出nginx服務設定表單的視窗，路徑Path填入執行路徑 <span>Users\cadlab\wcm2022ag5\nginx-</span><span>1.20.2\nginx.exe</span></p>
<p><span>11. Service name輸入nginx，確認後按下Install service</span></p>
<p><span>12. Win10開始&gt;電腦管理&gt;服務與應用程式&gt;開啟nginx服務&gt;確認顯示"執行中"</span></p>
<p><span>13. 網頁輸入 192.168.1.173，利用瀏覽器連接，顯示出內建設定，<strong>Welcome to nginx!</strong></span></p>
<h1>Tetris 報告1</h1>
<p><strong><span>&lt;h2&gt;w13&lt;/h2&gt;</span></strong></p>
<p><strong><span> </span></strong><strong><span>&lt;!-- </span></strong><strong>導入<span> brython </span></strong><strong>程式庫<span> --&gt;</span></strong></p>
<p><strong><span>&lt;script src="/static/brython.js"&gt;&lt;/script&gt;</span></strong></p>
<p><strong><span>&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;</span></strong></p>
<p><span style="background-color: #ffff99;">#</span><span style="background-color: #ffff99;">將cmsimde&gt;</span><span style="background-color: #ffff99;">static&gt;brython.js和brython_stdlib.js(brython主程式及標準程式庫)導入。</span></p>
<p><span style="background-color: #ffff99;"><img alt="" height="265" src="/images/導入brython程式庫.png" width="498"/></span></p>
<p><strong><span>&lt;!-- </span></strong><strong>啟動 <span>Brython --&gt;</span></strong></p>
<p><strong><span>&lt;script&gt;</span></strong></p>
<p><strong><span>window.onload=function(){brython();} </span></strong></p>
<p><strong><span>&lt;/script&gt;</span></strong></p>
<p><span style="background-color: #ffff99;">#window.onload=function()使頁面加載完後立即執行{}裡的動作，即啟動Brython。</span></p>
<p><strong><span>&lt;div id="brython_div"&gt;&lt;/div&gt;</span></strong></p>
<p><span style="background-color: #ffff99;">#html的標籤命名，程式產生的動態繪圖所放置的位置。</span></p>
<p></p>
<p><strong>&lt;script type="text/python"&gt; </strong></p>
<p>1</p>
<p>2</p>
<p>3</p>
<p>...</p>
<p><span style="background-color: #ffff99;">#編寫python的環境</span></p>
<p><strong>&lt;/script&gt;</strong></p>
<p><span style="background-color: #ffff99;">#python的標尾</span></p><h1>Tetris 報告2</h1>
<p>1.</p>
<p><img alt="" height="72" src="/images/234、235、236.png" width="722"/></p>
<p><span style="background-color: #e6e6e6;">      <strong>234</strong>     </span> 用 html 語法建立 DIV 標註物件，字串輸入( "Score:" )使變數顯示為</p>
<p>                  "Score:"</p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ"><span style="background-color: #e6e6e6;">      <strong>235</strong>     </span> 將 score_doc 的 id 設為 "Score:"</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ"><span style="background-color: #e6e6e6;">      <strong>236</strong>     </span> 用 brython_div &lt;= score_doc 把 score_doc 插入到頁面</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">2.</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ"><img alt="" height="47" src="/images/57、58.png" width="728"/></span></p>
<p><span style="background-color: #e6e6e6;">      57     </span> 將得到的 score 變數結果代入函式</p>
<p><span style="background-color: #e6e6e6;">      58     </span> 用 Score: score 的形式，以 .innerHTML 的方法將變數結果顯示在頁面</p>
<p>3.</p>
<p><img alt="" height="326" src="/images/116.png" width="715"/></p>
<p><span style="background-color: #e6e6e6;">                </span>  用以判斷得多少分的函式。每次得分為消除行數的2次方</p>
<p><span style="background-color: #e6e6e6;">    116      </span>  update_score(self.score) 將分數的加總 self.score 的變數代入函式</p>
<p>                 update_score()，返回形式 Score: self.score</p>
<h1>Final</h1>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W01(2/25) 1. 創建wcm2022倉儲</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.設定IPv6網路連線</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W02(3/04) 1.講解python程序</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W03(3/11) 1.用wink影片添加ssh</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.建立可攜系統</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W04(3/18) 1.在gist建立能讀取網際檔案的範例程式</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.建立Brython程式環境</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W05(3/25) 1.無(全校運動會/校慶)</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W06(4/01) 1.無(清明節放假)</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W07(4/08) 1.安裝設定nginx</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.以gpg4win查驗下載的檔案的數位簽證</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W08(4/15) 1.收集組員github 帳號資料</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.添加midterm頁面，期中考題目與答案</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W09(4/22) 1.用Wink對影片加上註解並放到個人網站(期中</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">考試)</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W10(4/29) 1.電腦輔助設計室個人虛擬主機 IP 設定，各組</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">一個</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W11(5/06) 1.w11_1a 網路對接</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W12(5/13) 1.建立Virtualbox虛擬主機</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.在電腦輔助設計室設定伺服器cadlab server</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W13(5/20) 1.在靜態與動態網頁建立Bython環境，並執行</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">Tetris 遊戲</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ white-space-prewrap"> </span><span class="JsGRdQ">2.完成Tetris 線上遊戲專案報告</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W14(5/27) 1.將舊資料中已退選的成員刪除，放入個人網頁</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W15(6/03) 1.將Tetris 遊戲加入計分系統報告(端午節放假)</span></p>
<p class="_04xlpA direction-ltr align-start para-style-body"><span class="JsGRdQ">W16(6/10) 1.期末報告整理並放入個人網站</span></p>